<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deliveryfood.mapper.MemberMapper">

    <select id="findByEmail" resultType="com.deliveryfood.dao.model.MemberDto">
        SELECT *
            , USER_ID as userId
            , REG_DT as regDt
            , UDT_DT as udtDt
        FROM MEMBER
        WHERE email = #{email}
    </select>

    <select id="findByUserId" resultType="com.deliveryfood.dao.model.MemberDto">
        SELECT *
             , USER_ID as userId
             , REG_DT as regDt
             , UDT_DT as udtDt
        FROM MEMBER
        WHERE user_id = #{userId}
    </select>

    <insert id="register" parameterType="com.deliveryfood.dao.model.MemberDto">
        INSERT INTO MEMBER(user_id, name , email, password, phone, status, role, reg_dt, udt_dt)
        VALUES(#{userId}, #{name}, #{email}, #{password}, #{phone}, #{status}, #{role}, #{regDt}, #{udtDt})
    </insert>

    <update id="updateStatus" parameterType="com.deliveryfood.dao.model.MemberDto">
        UPDATE MEMBER
        SET status = #{status},
            udt_dt = NOW()
        WHERE user_id = #{userId}
    </update>

    <update id="updateRole" parameterType="com.deliveryfood.dao.model.MemberDto">
        UPDATE MEMBER
        SET role = #{role},
            udt_dt = NOW()
        WHERE user_id = #{userId}
    </update>

    <update id="updateMember" parameterType="com.deliveryfood.dao.model.MemberDto">
        UPDATE MEMBER
        SET phone = #{phone},
            udt_dt = NOW()
        WHERE user_id = #{userId}
    </update>

    <delete id="deleteMemberByUserId">
        DELETE
        FROM MEMBER
        WHERE user_id = #{userId}
    </delete>

</mapper>